{
  "permissions": {
    "allow": [
      "Bash(NODE_OPTIONS=\"--max-old-space-size=8192\" npx next build)",
      "Bash(HUSKY=0 git push origin main --force)",
      "Bash(mkdir:*)",
      "WebFetch(domain:ui.aceternity.com)",
      "Bash(git cherry-pick:*)",
      "Bash(git restore:*)",
      "Bash(rm:*)",
      "Bash(npm run dev:check:*)",
      "Bash(git rebase:*)",
      "Bash(git stash:*)",
      "Bash(git add:*)",
      "Bash(git log:*)",
      "Bash(git commit:*)",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --msg-filter '\nsed \"\"\ns/Demo credentials: admin@riscura\\.com \\/ admin123/Demo credentials available in documentation/g\ns/admin@riscura\\.com \\/ admin123/demo credentials/g  \ns/admin@riscura\\.com/\\[demo_user\\]/g\ns/admin123/\\[demo_pass\\]/g\ns/🤖 Generated with \\[Claude Code\\](https:\\/\\/claude\\.ai\\/code)//g\ns/Co-Authored-By: Claude <noreply@anthropic\\.com>//g\n/^[[:space:]]*$/d\n\"\"' -- --all)",
      "Bash(git rm:*)",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --msg-filter '\nsed \"\"\ns/Demo credentials: admin@riscura\\.com \\/ admin123/Demo credentials available in documentation/g\ns/admin@riscura\\.com \\/ admin123/demo credentials/g  \ns/admin@riscura\\.com/\\[demo_user\\]/g\ns/admin123/\\[demo_pass\\]/g\ns/🤖 Generated with \\[Claude Code\\](https:\\/\\/claude\\.ai\\/code)//g\ns/Co-Authored-By: Claude <noreply@anthropic\\.com>//g\n/^[[:space:]]*$/d\n\"\"' -- --all)",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --msg-filter 'sed \"\"s/Demo credentials: admin@riscura\\.com \\/ admin123/Demo credentials available in documentation/g; s/admin@riscura\\.com \\/ admin123/demo credentials/g; s/admin@riscura\\.com/[demo_user]/g; s/admin123/[demo_pass]/g; s/🤖 Generated with \\[Claude Code\\](https:\\/\\/claude\\.ai\\/code)//g; s/Co-Authored-By: Claude <noreply@anthropic\\.com>//g; /^[[:space:]]*$/d\"\"' HEAD~10..HEAD)",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --msg-filter 'sed \"\"s/Demo credentials: admin@riscura\\.com \\/ admin123/Demo credentials available in documentation/g; s/admin@riscura\\.com \\/ admin123/demo credentials/g; s/admin@riscura\\.com/[demo_user]/g; s/admin123/[demo_pass]/g; s/🤖 Generated with \\[Claude Code\\](https:\\/\\/claude\\.ai\\/code)//g; s/Co-Authored-By: Claude <noreply@anthropic\\.com>//g; /^[[:space:]]*$/d\"\"' HEAD~50..HEAD~10)",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --msg-filter 'sed \"\"s/Demo credentials: admin@riscura\\.com \\/ admin123/Demo credentials available in documentation/g; s/admin@riscura\\.com \\/ admin123/demo credentials/g; s/admin@riscura\\.com/[demo_user]/g; s/admin123/[demo_pass]/g; s/🤖 Generated with \\[Claude Code\\](https:\\/\\/claude\\.ai\\/code)//g; s/Co-Authored-By: Claude <noreply@anthropic\\.com>//g; /^[[:space:]]*$/d\"\"' HEAD~100..HEAD~10)",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --msg-filter 'sed \"\"s/Demo credentials: admin@riscura\\.com \\/ admin123/Demo credentials available in documentation/g; s/admin@riscura\\.com \\/ admin123/demo credentials/g; s/admin@riscura\\.com/[demo_user]/g; s/admin123/[demo_pass]/g; s/🤖 Generated with \\[Claude Code\\](https:\\/\\/claude\\.ai\\/code)//g; s/Co-Authored-By: Claude <noreply@anthropic\\.com>//g; /^[[:space:]]*$/d\"\"' main)",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch -f --msg-filter 'sed \"\"s/Demo credentials: admin@riscura\\.com \\/ admin123/Demo credentials available in documentation/g; s/admin@riscura\\.com \\/ admin123/demo credentials/g; s/admin@riscura\\.com/[demo_user]/g; s/admin123/[demo_pass]/g; s/🤖 Generated with \\[Claude Code\\](https:\\/\\/claude\\.ai\\/code)//g; s/Co-Authored-By: Claude <noreply@anthropic\\.com>//g; /^[[:space:]]*$/d\"\"' -- --all)",
      "Bash(git push:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run dev:*)",
      "Bash(curl:*)",
      "Bash(test:*)",
      "Bash(cp:*)",
      "Bash(npm install:*)",
      "Bash(tasklist:*)",
      "Bash(powershell:*)",
      "Bash(wmic:*)",
      "Bash(npx:*)",
      "Bash(set SUPABASE_ACCESS_TOKEN=sbp_3fc89c44813ec40157aa50b135c57a56e7bd1e87)",
      "Bash(npm run health:database:*)",
      "Bash(npm run:*)",
      "Bash(grep:*)",
      "mcp__supabase__get_project_url",
      "mcp__supabase__get_anon_key",
      "mcp__supabase__execute_sql",
      "mcp__supabase__list_extensions",
      "Bash(timeout 30s npm run dev:*)",
      "mcp__supabase__list_tables",
      "Bash(timeout:*)",
      "Bash(bash:*)",
      "Bash(node:*)",
      "Bash(chmod:*)",
      "Bash(./test-website.sh:*)",
      "Bash(./cleanup-markdown.sh:*)",
      "Bash(./cleanup-api.sh:*)",
      "mcp__supabase__apply_migration",
      "mcp__supabase__get_advisors",
      "Bash(git pull:*)",
      "mcp__supabase__list_tables",
      "Bash(./test-website.sh)",
      "Bash(node:*)",
      "WebSearch",
      "Bash(claude mcp:*)",
      "Bash(where claude)",
      "Bash(cmd /c \"npx playwright install\")",
      "mcp__playwright__*",
      "Bash(npm --version)",
      "Bash(git fetch:*)",
      "Read(/Users/andyjung/.claude/agents/**)",
      "mcp__playwright__playwright_navigate",
      "mcp__playwright__playwright_screenshot",
      "mcp__playwright__playwright_get_visible_html",
      "Bash(git checkout:*)",
      "mcp__playwright__playwright_console_logs",
      "mcp__playwright__playwright_evaluate",
      "mcp__playwright__playwright_close"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "supabase",
    "playwright"
  ]
}