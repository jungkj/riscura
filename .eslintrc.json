{
  "extends": ["next/core-web-vitals", "prettier"],
  "parser": "@typescript-eslint/parser", 
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": ["@typescript-eslint"],
  "rules": {
    // Only critical errors that break functionality
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error", 
    "react/jsx-no-undef": "error",
    "react/jsx-no-duplicate-props": "error",
    "react/no-unknown-property": "error", 
    
    // TypeScript - very lenient for development
    "@typescript-eslint/no-unused-vars": [
      "warn", 
      { 
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "ignoreRestSiblings": true
      }
    ],
    
    // Warnings only - won't block builds  
    "no-console": "off", // Allow console statements in development
    "react/display-name": "off",
    "react-hooks/exhaustive-deps": "warn",
    "import/no-anonymous-default-export": "off",
    
    // Completely disabled for development workflow
    "react/jsx-sort-props": "off",
    "react/function-component-definition": "off", 
    "react/jsx-wrap-multilines": "off",
    "react/jsx-no-leaked-render": "off",
    "react/jsx-no-constructed-context-values": "off",
    "react/self-closing-comp": "off",
    "react/no-unescaped-entities": "off",
    "react/jsx-key": "warn", // Make key warnings less strict
    "react/no-children-prop": "off",
    "react/react-in-jsx-scope": "off",
    
    // TypeScript - completely disabled for development
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/ban-ts-comment": "off", 
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/prefer-as-const": "off",
    
    // General rules - very permissive
    "prefer-const": "warn",
    "no-var": "warn",
    "no-unreachable": "warn",
    "no-undef": "off", // TypeScript handles this
    "no-unused-expressions": "off"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "overrides": [
    {
      "files": ["*.tsx", "*.jsx"],
      "rules": {
        "react/jsx-uses-react": "off",
        "react/react-in-jsx-scope": "off"
      }
    },
    {
      "files": ["src/app/api/**/*.ts"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "no-console": "off"
      }
    },
    {
      "files": ["src/scripts/**/*.ts", "src/scripts/**/*.js"],
      "rules": {
        "no-console": "off",
        "@typescript-eslint/no-unused-vars": "off"
      }
    },
    {
      "files": ["src/__tests__/**/*.ts", "src/__tests__/**/*.tsx"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "no-console": "off"
      }
    },
    {
      "files": ["*.js", "*.cjs", "*.mjs"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-unused-vars": "off"
      }
    }
  ]
}