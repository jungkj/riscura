openapi: 3.0.3
info:
  title: RISCURA API
  description: |
    Complete API documentation for the RISCURA Risk, Compliance, and Security Assessment platform.
    
    ## Authentication
    All API endpoints require authentication via JWT tokens. Include the token in the Authorization header:
    ```
    Authorization: Bearer <your-jwt-token>
    ```
    
    ## Rate Limiting
    API requests are limited to 1000 requests per hour per user.
    
    ## Response Format
    All responses follow a consistent JSON structure:
    ```json
    {
      "success": true,
      "data": {...},
      "message": "Operation completed successfully",
      "timestamp": "2024-01-01T12:00:00Z"
    }
    ```
    
  version: "1.0.0"
  contact:
    name: RISCURA API Support
    email: api-support@riscura.com
    url: https://docs.riscura.com
  license:
    name: Proprietary
    url: https://riscura.com/license

servers:
  - url: https://app.riscura.com/api/v1
    description: Production server
  - url: https://staging.riscura.com/api/v1
    description: Staging server
  - url: http://localhost:3000/api/v1
    description: Development server

paths:
  # Authentication Endpoints
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user and return JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: securePassword123
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      user:
                        $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # Risk Management Endpoints
  /risks:
    get:
      tags:
        - Risks
      summary: List all risks
      description: Retrieve a paginated list of risks
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 25
        - name: category
          in: query
          schema:
            type: string
            enum: [operational, financial, compliance, technology, strategic]
      responses:
        '200':
          description: Risks retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      risks:
                        type: array
                        items:
                          $ref: '#/components/schemas/Risk'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
    post:
      tags:
        - Risks
      summary: Create new risk
      description: Create a new risk assessment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskCreate'
      responses:
        '201':
          description: Risk created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Risk'

  /risks/{id}:
    get:
      tags:
        - Risks
      summary: Get risk by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Risk retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Risk'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [admin, risk_manager, compliance_officer, auditor, user]
        organizationId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Risk:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          example: "Data Breach Risk"
        description:
          type: string
          example: "Risk of unauthorized access to customer data"
        category:
          type: string
          enum: [operational, financial, compliance, technology, strategic]
        likelihood:
          type: integer
          minimum: 1
          maximum: 5
        impact:
          type: object
          properties:
            financial:
              type: integer
              minimum: 1
              maximum: 5
            operational:
              type: integer
              minimum: 1
              maximum: 5
            reputational:
              type: integer
              minimum: 1
              maximum: 5
            regulatory:
              type: integer
              minimum: 1
              maximum: 5
        inherentScore:
          type: integer
          minimum: 1
          maximum: 25
        residualScore:
          type: integer
          minimum: 1
          maximum: 25
        status:
          type: string
          enum: [draft, submitted, approved, closed]
        owner:
          $ref: '#/components/schemas/User'
        controls:
          type: array
          items:
            $ref: '#/components/schemas/Control'

    Control:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum: [preventive, detective, corrective]
        effectiveness:
          type: integer
          minimum: 1
          maximum: 5
        frequency:
          type: string
          enum: [daily, weekly, monthly, quarterly, annually]
        owner:
          $ref: '#/components/schemas/User'

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        totalPages:
          type: integer

    RiskCreate:
      type: object
      required:
        - title
        - description
        - category
        - likelihood
        - impact
      properties:
        title:
          type: string
        description:
          type: string
        category:
          type: string
          enum: [operational, financial, compliance, technology, strategic]
        likelihood:
          type: integer
          minimum: 1
          maximum: 5
        impact:
          type: object
          properties:
            financial:
              type: integer
              minimum: 1
              maximum: 5
            operational:
              type: integer
              minimum: 1
              maximum: 5
            reputational:
              type: integer
              minimum: 1
              maximum: 5
            regulatory:
              type: integer
              minimum: 1
              maximum: 5

  responses:
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Authentication required"
              
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Resource not found"

security:
  - BearerAuth: [] 