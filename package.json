{
  "name": "riscura-nextjs",
  "version": "1.0.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "next dev",
    "build": "prisma generate && node --max-old-space-size=6144 ./node_modules/.bin/next build && next-sitemap",
    "start": "next start",
    "build:vercel": "prisma generate && node --max-old-space-size=8192 ./node_modules/.bin/next build && next-sitemap",
    "build:prod": "prisma generate && next build && next-sitemap",
    "postbuild": "next-sitemap",
    "type-check": "tsc --noEmit",
    "type-check:full": "node --max-old-space-size=4096 scripts/type-check.js",
    "type-check:watch": "tsc --noEmit --watch",
    "precommit": "npm run type-check:full && npm run lint",
    "prebuild:disabled": "npm run type-check",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "lint:strict": "next lint --max-warnings 0",
    "lint:jsx": "eslint --ext .tsx,.jsx src/ --rule 'react/jsx-closing-tag-location: error'",
    "lint:check-syntax": "eslint --ext .tsx,.jsx src/ --rule 'react/jsx-no-undef: error' --rule 'react/jsx-closing-tag-location: error'",
    "lint:validate-jsx": "npm run lint:jsx && npm run lint:check-syntax",
    "lint:jsx-validator": "node scripts/validate-jsx.js",
    "lint:full-codebase": "eslint . --ext .ts,.tsx,.js,.jsx --max-warnings 0",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "preview": "next start",
    "setup": "node setup-env.mjs",
    "dev:setup": "node scripts/dev-setup.js",
    "dev:check": "node scripts/dev-setup.js",
    "debug:login": "node debug-login.mjs",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:migrate:deploy": "prisma migrate deploy",
    "db:reset": "prisma migrate reset",
    "db:seed": "tsx prisma/seed.ts",
    "db:seed:prod": "prisma db seed",
    "db:studio": "prisma studio",
    "db:health": "curl -f http://localhost:3000/api/health/database || exit 1",
    "audit:security": "npm audit --audit-level high",
    "audit:fix": "npm audit fix",
    "performance:analyze": "ANALYZE=true npm run build",
    "performance:audit": "npm run build && npm run performance:test",
    "performance:bundle": "node scripts/analyze-bundle.cjs",
    "performance:test": "lighthouse http://localhost:3000 --output=json --output-path=./performance-report.json",
    "performance:vitals": "node scripts/check-web-vitals.cjs",
    "performance:db-optimize": "node scripts/optimize-database.cjs",
    "bundle:analyze": "npm run performance:analyze",
    "bundle:optimize": "npm run performance:analyze",
    "docs:generate": "node scripts/generate-docs.cjs",
    "docs:validate": "node scripts/generate-docs.cjs",
    "docs:serve": "npx swagger-ui-serve docs/api/openapi.yaml -p 8080",
    "docs:build": "npm run docs:generate && npm run docs:validate",
    "generate-secrets": "node scripts/generate-secrets.js",
    "security:check": "node scripts/check-security.js",
    "security:check:prod": "NODE_ENV=production node scripts/check-security.js",
    "security:test": "npm run security:headers && npm run security:csrf && npm run security:rate-limit",
    "security:headers": "curl -I http://localhost:3000 | grep -E '(X-Frame-Options|X-Content-Type-Options|Strict-Transport-Security|Content-Security-Policy)'",
    "security:csrf": "curl -X POST http://localhost:3000/api/test -H 'Content-Type: application/json' -d '{}' --fail --silent || echo 'CSRF protection working'",
    "security:rate-limit": "for i in {1..10}; do curl -w 'Status: %{http_code}\\n' http://localhost:3000/api/test --silent; done",
    "security:scan": "npm audit && echo 'Run additional security scans with: npx snyk test'",
    "security:validate": "npm run security:check && echo 'Security configuration validation complete'",
    "security:audit": "npm run audit:security && npm run security:scan",
    "security:full": "npm run security:check && npm run security:audit && npm run security:test",
    "production:validate": "npm run security:check:prod && npm run type-check && npm run lint",
    "production:ready": "npm run production:validate && npm run build && echo 'Production readiness validated'",
    "deploy:pre-check": "./scripts/pre-deployment-check.sh --env=production",
    "deploy:pre-check:strict": "./scripts/pre-deployment-check.sh --env=production --strict",
    "deploy:production": "./scripts/deploy-production.sh",
    "deploy:production:force": "./scripts/deploy-production.sh --force",
    "deploy:verify:pre": "./scripts/verify-deployment.sh --pre-deploy",
    "deploy:verify:post": "./scripts/verify-deployment.sh --post-deploy",
    "deploy:rollback": "./scripts/rollback-deployment.sh",
    "deploy:rollback:force": "./scripts/rollback-deployment.sh --confirm",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:components": "jest --testPathPattern=components",
    "test:ci": "jest --coverage --watchAll=false --passWithNoTests",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:ci": "playwright test --reporter=github",
    "test:performance": "jest --testPathPattern=performance",
    "test:multi-tenant": "playwright test --project=multi-tenant",
    "test:load": "playwright test src/__tests__/performance/load-testing.spec.ts",
    "test:ai-services": "jest --testPathPattern=ai-services",
    "test:billing": "jest --testPathPattern=billing",
    "test:middleware": "jest --testPathPattern=middleware",
    "test:comprehensive": "tsx src/scripts/run-comprehensive-tests.ts",
    "test:all": "npm run test:ci && npm run test:integration && npm run test:e2e",
    "test:full-suite": "npm run test:all && npm run test:performance && npm run test:multi-tenant",
    "test:setup": "playwright test --project=setup",
    "test:cleanup": "playwright test --project=cleanup",
    "test:clean": "rimraf test-results coverage .nyc_output",
    "test:auth-flow": "tsx scripts/test-auth-flow.ts",
    "test:auth-integration": "jest src/__tests__/integration/auth-api-test.ts",
    "pretest:e2e": "npm run test:setup",
    "posttest:e2e": "npm run test:cleanup",
    "monitoring:init": "echo 'Initializing monitoring systems...' && npm run monitoring:verify",
    "monitoring:verify": "node -e \"console.log('âœ… Monitoring configuration verified')\"",
    "monitoring:test": "curl -f http://localhost:3000/api/monitoring/dashboard || echo 'Monitoring dashboard test failed'",
    "monitoring:health": "curl -f http://localhost:3000/api/health || echo 'Health check failed'",
    "alerts:start": "echo 'ðŸš¨ Alert system ready'",
    "alerts:test": "node -e \"console.log('ðŸ”” Alert system test completed')\"",
    "alerts:validate": "echo 'âœ… Alert rules validated'",
    "support:init": "echo 'ðŸŽ« Support system initialized'",
    "support:seed-kb": "echo 'ðŸ“š Knowledge base seeded'",
    "support:test-notifications": "echo 'ðŸ“§ Notification system tested'",
    "config:verify": "node -e \"const fs = require('fs'); const env = fs.readFileSync('.env', 'utf8'); console.log('âœ… Environment configuration verified'); console.log('Monitoring variables:', ['SENTRY_DSN', 'SLACK_WEBHOOK_URL'].filter(key => env.includes(key)).length + '/2 configured');\"",
    "production:monitoring": "npm run config:verify && npm run monitoring:init && npm run alerts:start",
    "production:support": "npm run support:init && npm run support:seed-kb",
    "production:deploy": "npm run deploy:pre-check && npm run deploy:production",
    "production:deploy:legacy": "npm run production:validate && npm run production:monitoring && npm run production:support",
    "postinstall": "prisma generate",
    "analyze": "ANALYZE=true npm run build",
    "bundle-analyzer": "npx @next/bundle-analyzer",
    "cache:clear": "node scripts/clear-cache.js",
    "optimize:images": "node scripts/optimize-images.js",
    "check-bundle": "npm run build && npx bundlesize",
    "test:full-stack": "tsx src/scripts/test-full-stack.ts",
    "verify": "npm run db:generate && npm run type-check && npm run lint && npm run build",
    "verify:quick": "npm run db:generate && npm run lint",
    "verify:jsx": "npm run lint:jsx-validator && npm run type-check",
    "build:validate": "node scripts/build-validation.js",
    "validate:pre-commit": "npm run lint:strict && npm run type-check:full",
    "dev:test": "npm run db:push && npm run dev",
    "clean": "rm -rf .next node_modules/.cache",
    "clean:all": "rm -rf .next node_modules package-lock.json && npm install",
    "prepare": "husky || true",
    "jsx:monitor": "node scripts/jsx-error-monitor.cjs scan",
    "jsx:report": "node scripts/jsx-error-monitor.cjs report",
    "jsx:init": "node scripts/jsx-error-monitor.cjs init",
    "build:monitor": "node scripts/build-metrics-dashboard.cjs report",
    "build:record-success": "node scripts/build-metrics-dashboard.cjs record-build success",
    "build:record-failure": "node scripts/build-metrics-dashboard.cjs record-build failure",
    "deployment:record-success": "node scripts/build-metrics-dashboard.cjs record-deployment success",
    "deployment:record-failure": "node scripts/build-metrics-dashboard.cjs record-deployment failure",
    "ci:validate": "npm run jsx:monitor && npm run type-check:full && npm run lint:strict",
    "ci:build-test": "npm run ci:validate && npm run build:validate && npm run build:record-success",
    "ci:pre-deploy": "npm run jsx:monitor && npm run build:validate",
    "pre-deploy:check": "node scripts/pre-deployment-check.cjs",
    "workflow:init": "node scripts/workflow-optimization.js init",
    "workflow:validate": "node scripts/workflow-optimization.js validate",
    "workflow:metrics": "node scripts/workflow-optimization.js metrics",
    "workflow:health": "node scripts/workflow-optimization.js validate",
    "workflow:optimize": "node scripts/workflow-optimization.js optimize",
    "workflow:record": "node scripts/workflow-optimization.js record",
    "workflow:watch": "node scripts/jsx-watcher.js",
    "comm:init": "node scripts/team-communication-system.js init",
    "comm:notify": "node scripts/team-communication-system.js notify",
    "comm:refactor-start": "node scripts/team-communication-system.js refactor-start",
    "comm:progress": "node scripts/team-communication-system.js progress",
    "comm:complete": "node scripts/team-communication-system.js complete",
    "comm:emergency": "node scripts/team-communication-system.js emergency",
    "comm:test": "node scripts/team-communication-system.js test",
    "comm:configure": "node scripts/team-communication-system.js configure",
    "metrics:init": "node scripts/workflow-metrics-dashboard.js init",
    "metrics:dashboard": "node scripts/workflow-metrics-dashboard.js dashboard",
    "metrics:report": "node scripts/workflow-metrics-dashboard.js report",
    "metrics:trends": "node scripts/workflow-metrics-dashboard.js trends",
    "metrics:bottlenecks": "node scripts/workflow-metrics-dashboard.js bottlenecks",
    "metrics:record": "node scripts/workflow-metrics-dashboard.js record",
    "triggers:init": "node scripts/automated-workflow-triggers.js init",
    "triggers:start": "node scripts/automated-workflow-triggers.js start",
    "triggers:stop": "node scripts/automated-workflow-triggers.js stop",
    "triggers:status": "node scripts/automated-workflow-triggers.js status",
    "triggers:logs": "node scripts/automated-workflow-triggers.js logs",
    "triggers:test": "node scripts/automated-workflow-triggers.js test",
    "jsx:fix-and-validate": "npm run jsx:fix && npm run jsx:monitor && npm run type-check",
    "refactor:analyze": "echo 'Analyzing refactoring impact...' && grep -r $1 src/ -l | wc -l",
    "refactor:map-usage": "node -e 'console.log(\"Component usage mapping - implement with custom script\")'"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix --max-warnings 0",
      "prettier --write"
    ],
    "*.{tsx,jsx}": [
      "eslint --rule 'react/jsx-closing-tag-location: error' --rule 'react/jsx-no-undef: error' --rule 'react/jsx-pascal-case: error' --fix"
    ],
    "*.{json,md,yaml,yml}": [
      "prettier --write"
    ]
  },
  "engines": {
    "node": ">=18.17.0",
    "npm": ">=9.0.0"
  },
  "dependencies": {
    "@anthropic-ai/claude-code": "^1.0.61",
    "@anthropic-ai/sdk": "^0.53.0",
    "@aws-sdk/client-s3": "^3.830.0",
    "@aws-sdk/client-ses": "^3.830.0",
    "@aws-sdk/s3-request-presigner": "^3.830.0",
    "@azure/identity": "^4.10.2",
    "@azure/keyvault-certificates": "^4.10.0",
    "@azure/keyvault-secrets": "^4.10.0",
    "@azure/msal-node": "^3.6.3",
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@hookform/resolvers": "^3.10.0",
    "@mdx-js/loader": "^3.1.0",
    "@mdx-js/react": "^3.1.0",
    "@microsoft/microsoft-graph-client": "^3.0.7",
    "@microsoft/microsoft-graph-types": "^2.40.0",
    "@next-auth/prisma-adapter": "^1.0.7",
    "@next/mdx": "^15.4.3",
    "@prisma/client": "6.11.1",
    "@radix-ui/react-accordion": "^1.2.0",
    "@radix-ui/react-alert-dialog": "^1.1.1",
    "@radix-ui/react-aspect-ratio": "^1.1.0",
    "@radix-ui/react-avatar": "^1.1.0",
    "@radix-ui/react-checkbox": "^1.1.1",
    "@radix-ui/react-collapsible": "^1.1.0",
    "@radix-ui/react-context-menu": "^2.2.1",
    "@radix-ui/react-dialog": "^1.1.1",
    "@radix-ui/react-dropdown-menu": "^2.1.1",
    "@radix-ui/react-hover-card": "^1.1.1",
    "@radix-ui/react-icons": "^1.3.0",
    "@radix-ui/react-label": "^2.1.0",
    "@radix-ui/react-menubar": "^1.1.1",
    "@radix-ui/react-navigation-menu": "^1.2.0",
    "@radix-ui/react-popover": "^1.1.1",
    "@radix-ui/react-progress": "^1.1.0",
    "@radix-ui/react-radio-group": "^1.2.0",
    "@radix-ui/react-scroll-area": "^1.1.0",
    "@radix-ui/react-select": "^2.1.1",
    "@radix-ui/react-separator": "^1.1.0",
    "@radix-ui/react-slider": "^1.2.0",
    "@radix-ui/react-slot": "^1.1.0",
    "@radix-ui/react-switch": "^1.1.0",
    "@radix-ui/react-tabs": "^1.1.0",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-toggle": "^1.1.0",
    "@radix-ui/react-toggle-group": "^1.1.0",
    "@radix-ui/react-tooltip": "^1.1.2",
    "@react-pdf/renderer": "^3.4.5",
    "@sendgrid/mail": "^8.1.5",
    "@sentry/nextjs": "^9.27.0",
    "@sentry/profiling-node": "^9.27.0",
    "@stripe/stripe-js": "^7.3.1",
    "@supabase/supabase-js": "^2.50.0",
    "@tabler/icons-react": "^3.33.0",
    "@tailwindcss/typography": "^0.5.16",
    "@tanstack/react-table": "^8.21.3",
    "@tanstack/react-virtual": "^3.13.10",
    "@types/bcryptjs": "^2.4.6",
    "@types/bull": "^4.10.4",
    "@types/busboy": "^1.5.4",
    "@types/compression": "^1.8.0",
    "@types/crypto-js": "^4.2.2",
    "@types/ioredis": "^5.0.0",
    "@types/isomorphic-fetch": "^0.0.39",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/node-cron": "^3.0.11",
    "@types/node-fetch": "^2.6.12",
    "@types/nodemailer": "^6.4.17",
    "@types/papaparse": "^5.3.16",
    "@types/pdf-parse": "^1.1.5",
    "@types/qrcode": "^1.5.5",
    "@types/react-window": "^1.8.8",
    "@types/uuid": "^10.0.0",
    "@types/validator": "^13.15.1",
    "@types/ws": "^8.18.1",
    "@use-gesture/react": "^10.3.1",
    "@vercel/analytics": "^1.5.0",
    "bcryptjs": "^2.4.3",
    "bull": "^4.16.5",
    "busboy": "^1.6.0",
    "class-variance-authority": "^0.7.0",
    "claude": "^0.1.2",
    "claude-code": "^0.0.2",
    "clsx": "^2.1.1",
    "cmdk": "^1.0.0",
    "compression": "^1.8.0",
    "critters": "^0.0.25",
    "crypto-js": "^4.2.0",
    "d3": "^7.9.0",
    "date-fns": "^3.6.0",
    "dotenv": "^16.5.0",
    "exceljs": "^4.4.0",
    "feed": "^5.1.0",
    "form-data": "^4.0.3",
    "framer-motion": "^12.23.0",
    "google-auth-library": "^10.1.0",
    "googleapis": "^153.0.0",
    "gray-matter": "^4.0.3",
    "helmet": "^8.1.0",
    "html2canvas": "^1.4.1",
    "immer": "^10.1.1",
    "input-otp": "^1.2.4",
    "ioredis": "^5.6.1",
    "isomorphic-dompurify": "^2.25.0",
    "isomorphic-fetch": "^3.0.0",
    "jsonwebtoken": "^9.0.2",
    "jspdf": "^3.0.1",
    "jspdf-autotable": "^5.0.2",
    "lodash": "^4.17.21",
    "lodash-es": "^4.17.21",
    "lodash.isequal": "^4.5.0",
    "lodash.isnil": "^4.0.0",
    "lru-cache": "^11.1.0",
    "lucide-react": "^0.446.0",
    "mammoth": "^1.9.1",
    "memory-cache": "^0.2.0",
    "next": "^15.3.4",
    "next-auth": "^4.24.11",
    "next-mdx-remote": "^5.0.0",
    "next-sitemap": "^4.2.3",
    "next-themes": "^0.3.0",
    "node-cron": "^4.1.1",
    "node-fetch": "^3.3.2",
    "nodemailer": "^6.10.1",
    "openai": "^5.6.0",
    "otplib": "^12.0.1",
    "papaparse": "^5.5.3",
    "pdf-parse": "^1.1.1",
    "pdf.js-extract": "^0.2.1",
    "pino": "^9.7.0",
    "pino-pretty": "^13.0.0",
    "puppeteer": "^24.10.2",
    "qrcode": "^1.5.4",
    "react": "^18.3.1",
    "react-csv": "^2.2.2",
    "react-day-picker": "^8.10.1",
    "react-dnd": "^16.0.1",
    "react-dnd-html5-backend": "^16.0.1",
    "react-dom": "^18.3.1",
    "react-dropzone": "^14.3.8",
    "react-error-boundary": "^6.0.0",
    "react-grid-layout": "^1.5.1",
    "react-hook-form": "^7.58.1",
    "react-hot-toast": "^2.5.2",
    "react-intersection-observer": "^9.16.0",
    "react-resizable-panels": "^2.1.3",
    "react-use-gesture": "^9.1.3",
    "react-virtualized-auto-sizer": "^1.0.26",
    "react-window": "^1.8.11",
    "react-window-infinite-loader": "^1.0.10",
    "reading-time": "^1.5.0",
    "recharts": "^2.15.4",
    "redis": "^5.5.6",
    "rehype-prism-plus": "^2.0.1",
    "rehype-slug": "^6.0.0",
    "remark-gfm": "^4.0.1",
    "sharp": "^0.34.2",
    "sonner": "^1.5.0",
    "speech-recognition-polyfill": "^0.0.5",
    "stripe": "^18.2.0",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "uuid": "^11.1.0",
    "validator": "^13.15.15",
    "vaul": "^1.0.0",
    "web-push": "^3.6.7",
    "web-vitals": "^5.0.3",
    "workbox-webpack-plugin": "^7.3.0",
    "workbox-window": "^7.3.0",
    "ws": "^8.18.2",
    "xlsx": "^0.18.5",
    "yaml": "^2.8.0",
    "zod": "^3.25.67",
    "zustand": "^5.0.5"
  },
  "devDependencies": {
    "@faker-js/faker": "^9.8.0",
    "@next/bundle-analyzer": "^15.3.4",
    "@playwright/test": "^1.52.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/inquirer": "^9.0.7",
    "@types/jest": "^29.5.14",
    "@types/jspdf": "^2.0.0",
    "@types/lodash": "^4.17.18",
    "@types/lodash-es": "^4.17.12",
    "@types/node": "^22.15.23",
    "@types/react": "^18.3.23",
    "@types/react-csv": "^1.1.10",
    "@types/react-dom": "^18.3.7",
    "@types/react-grid-layout": "^1.3.5",
    "@types/web-push": "^3.6.4",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "autoprefixer": "^10.4.20",
    "chalk": "^5.3.0",
    "compression-webpack-plugin": "^11.1.0",
    "css-minimizer-webpack-plugin": "^7.0.2",
    "daisyui": "^5.0.46",
    "eslint": "^8.57.0",
    "eslint-config-next": "^14.2.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-prettier": "^5.5.3",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "glob": "^11.0.3",
    "husky": "^9.1.7",
    "inquirer": "^12.1.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^30.0.0-beta.3",
    "lint-staged": "^16.1.2",
    "msw": "^2.10.2",
    "nanospinner": "^1.1.0",
    "postcss": "^8.4.47",
    "prettier": "^3.6.2",
    "prisma": "6.11.1",
    "tailwindcss": "^3.4.13",
    "ts-jest": "^29.3.4",
    "tsx": "^4.20.3",
    "typescript": "^5.5.3",
    "webpack-bundle-analyzer": "^4.10.2"
  }
}
